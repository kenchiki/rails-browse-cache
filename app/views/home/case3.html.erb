<h1>Cache-Control: no-cache, private, max-age=0を設定した場合</h1>
<h2 class="mt-4">Railsによる現在の時間</h2>
<p><%= Time.current.strftime('%T') %></p>
<p><%= link_to '他のページに遷移', home_case3_other_path %></p>
<h2 class="mt-4">JSによる時間出力</h2>
<script>
  function outputTime() {
    document.open()
    const now = new Date()

    document.write(now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds())
    document.close()
  }
  outputTime()
</script>
<h2 class="mt-4">豆知識</h2>
<div class="group mt-4">
  <div class="wysiwyg">
    <h3>結論</h3>
    <ul>
      <li>ブラウザの戻る、進むでキャッシュが残る</li>
    </ul>
    <h3 class="mt-4">privateとは何か</h3>
    <ul>
      <li>ブラウザのキャッシュには格納できますが、 通常、対象ユーザーは 1 人のため、中間キャッシュに格納することは認められません。</li>
      <li>たとえば、個人的なユーザー情報を含む HTML ページはそのユーザーのブラウザでのみキャッシュに格納でき、CDN では格納できません。</li>
      <li>publicにしておくと中間キャッシュサーバー(例えば、cloudfront)にもキャッシュされる</li>
      <li>private参考：https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=ja#%E3%80%8Cno-cache%E3%80%8D%E3%81%A8%E3%80%8Cno-store%E3%80%8D</li>
      <li>cloudfront参考：https://aws.amazon.com/jp/premiumsupport/knowledge-center/prevent-cloudfront-from-caching-files/</li>
    </ul>
    <h3 class="mt-4">max-ageとは何か</h3>
    <ul>
      <li>このディレクティブでは、取得したレスポンスを再使用できる最大時間を、リクエストの時刻を起点とする秒数で指定します。</li>
      <li>たとえば、"max-age=60" は、レスポンスを 60 秒間キャッシュに格納して再使用できることを示します。</li>
      <li>参考：https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=ja#%E3%80%8Cmax-age%E3%80%8D</li>
    </ul>
  </div>
</div>
